#API configuration
ROUTE_CHECKER =google #Specifies the choice between Google Maps (google) and OpenStreetMap (osm) for route checking
GOOGLE_API_KEY=AIzaSyBMreuA5LC2BJ2f-HFPPhYIbhijfbzfz Required if ROUTE_CHECKER is set to google. It is the API key associated with your Google Cloud account.

#Address of the university configuration
UNIVERSITY_STREET_NUMBER=140 #Street number of the university address.
UNIVERSITY_STREET_NAME=Rue de la Nouvelle France #Street name of the university address.
UNIVERSITY_POSTAL_CODE=93100 #Postal code of the university address.
UNIVERSITY_CITY=Montreuil # City where the university is located.

#Trip configuration
RATE_PER_KM=0.13 #Rate charged per kilometer.
COST_PER_KM=0.10 #Cost incurred per kilometer.
BASE_RATE=1.50 #Base rate for the trip.
ACCEPT_TIME_DIFFERENCE_MINUTES=10 #Accepted time difference between two points .


UNIVERSITY_EMAIL_DOMAIN=iut.univ-paris8.fr #Email domain associated with the university.
FRONT_END_URL=http://localhost:4200/ #URL of the front-end application, with the port you have in docker.


# The mail server
MAIL_USERNAME=uniride.uniride@gmail.com #Username for the mail server.
MAIL_PASSWORD=tweh usfx fhcr acsq #Password for the mail server.
MAIL_SERVER=smtp.gmail.com #SMTP server address.
MAIL_EXPIRATION=600 #Expiration time for mail-related processes.
SECRET_KEY=zeGd2SfM9Az58NqFCD9qdzQ9J82SwHdvFmqB6tPAqTz4astsdc #Just generate a random Password with bitwarden for example
SECURITY_PASSWORD_SALT=$2b$12$.e1z9Oj7OFux0.DT.VnBm. #Just generate a random salt


# The upload folder
MAX_CONTENT_LENGTH=5000000 #Maximum content length allowed for uploads in bytes.


# JWT configuration
JWT_SALT=$2b$12$CrXbxXB4ZQhZSxmI5/1Kxu #Salt used for JWT.Just generate a random salt in python file execute:  import bcrypt bcrypt.gensalt()
JWT_SECRET_KEY=NTtR94WqS8avr3Q7raTDS6D69KCJKpR2geViUxnGSQS3QQS2M5vHNKsV6XV2KWs2 #Just generate a random Password with bitwarden for example
JWT_ACCESS_TOKEN_EXPIRES=3600 #Token expiration time in seconds.
JWT_REFRESH_TOKEN_EXPIRES=30
JWT_ACCESS_TOKEN_REFRESH=600

# The redis queue
RQ_REDIS_URL=redis://uniride_redis:6379/0 #Based of the container name and port of redis in your docker-compose file 


# The redis cache
CACHE_REDIS_HOST=uniride_redis #Based of the container name redis in your docker-compose file 
CACHE_REDIS_PORT=6379  #Based of the port of redis in your docker-compose file 


# The db
DB_HOST=151.135.143.117  #Database server host.
DB_NAME=uniride #Database name.
DB_USER=university_uniride #Database user.
DB_PWD=LfpIhadzadza1144sg1A79TLNAxX9k #Database password.
DB_PORT=5432 #Database port, that you set in docker-compose file


#FLask configuration
FLASK_HOST = 0.0.0.0 #Flask application host.
FLASK_PORT = 5050 #Flask application port, that you set in docker-compose file


# Certificate configuration
CERTIFICATE_CRT_FOLDER=certs/flask-selfsigned.crt #Folder path for the SSL certificate (crt file).
CERTIFICATE_KEY_FOLDER=certs/flask-selfsigned.key #Folder path for the SSL private key (key file).
